class Asignatura
    types
    Hora = nat * nat;
    String = seq of char;
    instance variables
    nombreAsignatura: String;
    horaInicio: Hora;
    horaFin: Hora;

    operations
    public Asignatura: String * Hora * Hora ==> Asignatura
    Asignatura(na, hi, hf) ==
      (nombreAsignatura := na;
       horaInicio := hi;
       horaFin := hf;
       return self)
    pre len(na) > 0;

end Asignatura 

class EstudianteRetina

    types
    String = seq of char;

    instance variables
    nombre: String;
    dni: String;
    semestre: String;
    asignaturas: set of Asignatura

    operations
    public EstudianteRetina: String * String * String ==> EstudianteRetina
    EstudianteRetina(n, d, s) ==
      (nombre := n;
       dni := d;
       semestre := s;
       asignaturas := {};
       return self)
    pre len(n) > 0 and len(d) > 0 and len(s) > 0;

end EstudianteRetina

class LectorRetina 

    instance variables
    retina: EstudianteRetina;

    operations
    public LectorRetina: EstudianteRetina ==> LectorRetina
    LectorRetina(estudiante) ==
      (retina := estudiante;
       return self)
    pre estudiante <> nil;

end LectorRetina

class Sistema 
    
    instance variables
    lectorRetina: set of LectorRetina;

    operations
    public Sistema: () ==> Sistema
    Sistema() ==
      (lectorRetina := {};
       return self)

end Sistema

class Alarma

end Alarma

class Docente

    types
    String = seq of char;

    instance variables
    nombre: String;
    dni: String;

    operations
    public Docente: String * String ==> Docente
    Docente(n, d) ==
      (nombre := n;
       dni := d;
       return self)
    pre len(n) > 0 and len(d) = 8;

end Docente

class RegistroAsistencia
    types
    Fecha = nat1 * nat1 * nat1;
    instance variables
    codigo: nat;
    semestre: nat1;
    fecha: Fecha;
    docente: Docente;
    asignatura: Asignatura;

    operations
    public RegistroAsistencia: nat * nat1 * Fecha * Docente * Asignatura ==> RegistroAsistencia
    RegistroAsistencia(cod, sem, fec, d, a) ==
      (codigo := cod;
       semestre := sem;
       fecha := fec;
       docente := d;
       asignatura := a;
       return self)
    pre cod > 0;

end RegistroAsistencia














